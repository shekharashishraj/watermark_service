version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: watermark-backend
    restart: unless-stopped
    environment:
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
    volumes:
      - backend_uploads:/app/uploads
      - backend_outputs:/app/outputs
      - backend_logs:/app/logs
    networks:
      - watermark-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: watermark-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - watermark-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Optional: Redis for session management (uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   container_name: watermark-redis
  #   restart: unless-stopped
  #   networks:
  #     - watermark-network
  #   volumes:
  #     - redis_data:/data
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

volumes:
  backend_uploads:
    driver: local
  backend_outputs:
    driver: local
  backend_logs:
    driver: local
  # redis_data:
  #   driver: local

networks:
  watermark-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
